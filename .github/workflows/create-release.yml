name: Create Release from Builds

on:
  workflow_run:
    workflows: ["Build macOS", "Build Windows", "Build Linux"]
    types:
      - completed
    branches: [ electron-v2 ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest version
      id: get_version
      run: |
        # Get the latest tag
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.4.0")
        echo "Latest tag: $LATEST_TAG"
        
        # Extract version number and increment
        VERSION=$(echo $LATEST_TAG | sed 's/v//')
        MAJOR=$(echo $VERSION | cut -d. -f1)
        MINOR=$(echo $VERSION | cut -d. -f2)
        PATCH=$(echo $VERSION | cut -d. -f3)
        
        # Increment minor version
        NEW_MINOR=$((MINOR + 1))
        NEW_VERSION="${MAJOR}.${NEW_MINOR}.0"
        NEW_TAG="v${NEW_VERSION}"
        
        echo "New version: $NEW_VERSION"
        echo "New tag: $NEW_TAG"
        
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

    - name: Update package.json version
      run: |
        # Update package.json version
        npm version ${{ steps.get_version.outputs.new_version }} --no-git-tag-version
        
        # Commit and push the version update
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json package-lock.json
        git commit -m "Bump version to ${{ steps.get_version.outputs.new_version }}"
        git push origin electron-v2

    - name: Download all artifacts from workflow run
      uses: actions/download-artifact@v4
      with:
        name: placcon-launcher-mac
        path: artifacts/mac

    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: placcon-launcher-win
        path: artifacts/win

    - name: Download Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: placcon-launcher-linux
        path: artifacts/linux

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.new_tag }}
        name: Release ${{ steps.get_version.outputs.new_version }}
        files: |
          artifacts/mac/dist/*.dmg
          artifacts/win/dist/*.exe
          artifacts/linux/dist/*.deb
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 