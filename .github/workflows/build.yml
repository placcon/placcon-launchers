name: Build All Platforms

on:
  push:
    branches: [ electron-v2 ]
  pull_request:
    branches: [ electron-v2 ]

jobs:
  build:
    strategy:
      matrix:
        platform: [mac, win, linux]
        include:
          - platform: mac
            runner: macos-latest
            extension: dmg
          - platform: win
            runner: windows-latest
            extension: exe
          - platform: linux
            runner: ubuntu-latest
            extension: deb
    
    runs-on: ${{ matrix.runner }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for ${{ matrix.platform }}
      run: npm run build:${{ matrix.platform }}
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: placcon-launcher-${{ matrix.platform }}
        path: dist/
        retention-days: 0

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/electron-v2' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest version
      id: get_version
      run: |
        # Get the latest tag
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.4.0")
        echo "Latest tag: $LATEST_TAG"
        
        # Extract version number and increment
        VERSION=$(echo $LATEST_TAG | sed 's/v//')
        MAJOR=$(echo $VERSION | cut -d. -f1)
        MINOR=$(echo $VERSION | cut -d. -f2)
        PATCH=$(echo $VERSION | cut -d. -f3)
        
        # Increment minor version
        NEW_MINOR=$((MINOR + 1))
        NEW_VERSION="${MAJOR}.${NEW_MINOR}.0"
        NEW_TAG="v${NEW_VERSION}"
        
        echo "New version: $NEW_VERSION"
        echo "New tag: $NEW_TAG"
        
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.new_tag }}
        name: Release ${{ steps.get_version.outputs.new_version }}
        files: |
          artifacts/placcon-launcher-mac/**/*.dmg
          artifacts/placcon-launcher-win/**/*.exe
          artifacts/placcon-launcher-linux/**/*.deb
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 